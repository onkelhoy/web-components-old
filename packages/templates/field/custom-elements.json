{
  "className": "FieldTemplate",
  "folder": "/Users/henry/Developer/projects/web-components/packages/templates/field",
  "properties": [
    {
      "name": "counterElement",
      "type": "HTMLSpanElement",
      "type_value": {
        "addEventListener": null,
        "removeEventListener": null
      },
      "primitive": false,
      "conditional": true
    },
    {
      "name": "errorText",
      "type": "Typography",
      "type_value": {
        "variant": [
          "C1",
          "C2",
          "C3",
          "C4",
          "T1",
          "T2",
          "T3",
          "T4",
          "H1",
          "H2",
          "H3",
          "H4",
          "H5"
        ],
        "align": [
          "center",
          "justify",
          "start",
          "end",
          "left",
          "right",
          "unset",
          "inherit",
          "initial"
        ],
        "nowrap": null,
        "render": null
      },
      "primitive": false,
      "conditional": true
    },
    {
      "name": "warningText",
      "type": "Typography",
      "type_value": {
        "variant": [
          "C1",
          "C2",
          "C3",
          "C4",
          "T1",
          "T2",
          "T3",
          "T4",
          "H1",
          "H2",
          "H3",
          "H4",
          "H5"
        ],
        "align": [
          "center",
          "justify",
          "start",
          "end",
          "left",
          "right",
          "unset",
          "inherit",
          "initial"
        ],
        "nowrap": null,
        "render": null
      },
      "primitive": false,
      "conditional": true
    },
    {
      "name": "message",
      "type": "Message",
      "type_value": {
        "type": null,
        "message": null
      },
      "primitive": false,
      "conditional": true
    },
    {
      "name": "label",
      "type": "string",
      "type_value": null,
      "primitive": true,
      "conditional": true
    },
    {
      "name": "size",
      "type": "Size",
      "default_value": "medium",
      "type_value": [
        "small",
        "medium",
        "large"
      ],
      "primitive": false,
      "conditional": false
    },
    {
      "name": "radius",
      "type": "Radius",
      "default_value": "small",
      "type_value": [
        "small",
        "medium",
        "large",
        "none",
        "circular"
      ],
      "primitive": false,
      "conditional": false
    },
    {
      "name": "checked",
      "type": "boolean",
      "type_value": null,
      "primitive": true,
      "conditional": true
    },
    {
      "name": "readonly",
      "type": "boolean",
      "default_value": false,
      "type_value": null,
      "primitive": true,
      "conditional": false
    },
    {
      "name": "value",
      "type": "string",
      "default_value": "",
      "type_value": null,
      "primitive": true,
      "conditional": false
    },
    {
      "name": "customError",
      "type": "FieldValidityState",
      "type_value": {
        "badInput": null,
        "customError": null,
        "patternMismatch": null,
        "rangeOverflow": null,
        "rangeUnderflow": null,
        "stepMismatch": null,
        "tooLong": null,
        "tooShort": null,
        "typeMismatch": null,
        "valid": null,
        "valueMissing": null
      },
      "primitive": false,
      "conditional": true
    },
    {
      "name": "customWarning",
      "type": "FieldValidityState",
      "type_value": {
        "badInput": null,
        "customError": null,
        "patternMismatch": null,
        "rangeOverflow": null,
        "rangeUnderflow": null,
        "stepMismatch": null,
        "tooLong": null,
        "tooShort": null,
        "typeMismatch": null,
        "valid": null,
        "valueMissing": null
      },
      "primitive": false,
      "conditional": true
    },
    {
      "name": "max",
      "type": "number",
      "type_value": null,
      "primitive": true,
      "conditional": true
    },
    {
      "name": "min",
      "type": "number",
      "type_value": null,
      "primitive": true,
      "conditional": true
    },
    {
      "name": "maxLength",
      "type": "number",
      "type_value": null,
      "primitive": true,
      "conditional": true
    },
    {
      "name": "_suffix",
      "default_value": "<span> </span>",
      "type_value": null,
      "primitive": false,
      "conditional": true
    },
    {
      "name": "_prefix",
      "default_value": "<span> </span>",
      "type_value": null,
      "primitive": false,
      "conditional": true
    }
  ],
  "extend_class": {
    "className": "FormElementTemplate",
    "folder": "/Users/henry/Developer/projects/web-components/packages/templates/form-element",
    "properties": [
      {
        "name": "disabled",
        "type": "boolean",
        "type_value": null,
        "primitive": true,
        "conditional": true
      },
      {
        "name": "required",
        "type": "boolean",
        "type_value": null,
        "primitive": true,
        "conditional": true
      },
      {
        "name": "name",
        "type": "string",
        "type_value": null,
        "primitive": true,
        "conditional": true
      }
    ],
    "extend_class": null
  },
  "imports": {
    "/Users/henry/Developer/projects/web-components/packages/templates/form-element": [
      {
        "name": "__decorate",
        "from": "tslib"
      },
      {
        "name": "property",
        "from": "@henry2/tools-utils"
      },
      {
        "name": "BaseTemplate",
        "from": "@henry2/templates-base"
      }
    ],
    "/Users/henry/Developer/projects/web-components/packages/templates/field": [
      {
        "name": "__decorate",
        "from": "tslib"
      },
      {
        "name": "html",
        "from": "@henry2/tools-utils"
      },
      {
        "name": "query",
        "from": "@henry2/tools-utils"
      },
      {
        "name": "property",
        "from": "@henry2/tools-utils"
      },
      {
        "name": "suspense",
        "from": "@henry2/tools-utils"
      },
      {
        "name": "FormElementTemplate",
        "from": "@henry2/templates-form-element"
      },
      {
        "name": "style",
        "from": "./style"
      },
      {
        "name": "ValidationAttributes",
        "from": "./types"
      }
    ]
  },
  "html": {
    "slots": [
      {
        "name": "header",
        "html": "<o-typography></o-typography>"
      },
      {
        "name": "prefix",
        "html": "<span> </span>"
      },
      {
        "name": "default",
        "html": ""
      },
      {
        "name": "suffix",
        "html": "<span> </span>"
      }
    ],
    "parts": [
      {
        "name": "header",
        "tag": "HEADER"
      },
      {
        "name": "wrapper",
        "tag": "O-BOX-TEMPLATE"
      },
      {
        "name": "footer",
        "tag": "FOOTER"
      }
    ]
  },
  "css": {
    "folder": "/Users/henry/Developer/projects/web-components/packages/templates/field",
    "sources": [],
    "variables": {
      "--o-field-height-small": {
        "usecases": [
          "height"
        ],
        "fallbacks": [
          "var(--field-size-small)"
        ]
      },
      "--field-size-small": {
        "usecases": [
          "height"
        ],
        "fallbacks": []
      },
      "--o-field-block-height-small": {
        "usecases": [
          "height"
        ],
        "fallbacks": [
          "var(--field-size-small)"
        ]
      },
      "--o-field-height-medium": {
        "usecases": [
          "height"
        ],
        "fallbacks": [
          "var(--field-size-medium)"
        ]
      },
      "--field-size-medium": {
        "usecases": [
          "height"
        ],
        "fallbacks": []
      },
      "--o-field-block-height-medium": {
        "usecases": [
          "height"
        ],
        "fallbacks": [
          "var(--field-size-small)"
        ]
      },
      "--o-field-height-large": {
        "usecases": [
          "height"
        ],
        "fallbacks": [
          "var(--field-size-large)"
        ]
      },
      "--field-size-large": {
        "usecases": [
          "height"
        ],
        "fallbacks": []
      },
      "--o-field-block-height-large": {
        "usecases": [
          "height"
        ],
        "fallbacks": [
          "var(--field-size-small)"
        ]
      },
      "--o-field-background-color-light": {
        "usecases": [
          "--border",
          "--outline"
        ],
        "fallbacks": [
          "var(--o-color-black, black)",
          "rgb(90, 46, 250)"
        ]
      },
      "--o-color-black": {
        "usecases": [
          "--border",
          "--color"
        ],
        "fallbacks": [
          "black",
          "white"
        ]
      },
      "--o-field-text-color-light": {
        "usecases": [
          "--color"
        ],
        "fallbacks": [
          "var(--o-color-black, black)"
        ]
      },
      "--color": {
        "usecases": [
          "color"
        ],
        "fallbacks": []
      },
      "--padding-small": {
        "usecases": [
          "padding-inline"
        ],
        "fallbacks": []
      },
      "--gap-small": {
        "usecases": [
          "gap",
          "margin-right",
          "margin-left"
        ],
        "fallbacks": []
      },
      "--padding-medium": {
        "usecases": [
          "padding-inline"
        ],
        "fallbacks": []
      },
      "--input-fontfamily": {
        "usecases": [
          "font-family"
        ],
        "fallbacks": [
          "var(--typography-c3-fontfamily)"
        ]
      },
      "--typography-c3-fontfamily": {
        "usecases": [
          "font-family"
        ],
        "fallbacks": []
      },
      "--input-fontsize": {
        "usecases": [
          "font-size"
        ],
        "fallbacks": [
          "var(--typography-c3-fontsize, 16px)"
        ]
      },
      "--typography-c3-fontsize": {
        "usecases": [
          "font-size"
        ],
        "fallbacks": [
          "16px"
        ]
      },
      "--input-fontweight": {
        "usecases": [
          "font-weight"
        ],
        "fallbacks": [
          "var(--typography-c3-fontweight, 400)"
        ]
      },
      "--typography-c3-fontweight": {
        "usecases": [
          "font-weight"
        ],
        "fallbacks": [
          "400"
        ]
      },
      "--input-lineheight": {
        "usecases": [
          "line-height"
        ],
        "fallbacks": [
          "var(--typography-c3-lineheight, 24px)"
        ]
      },
      "--typography-c3-lineheight": {
        "usecases": [
          "line-height"
        ],
        "fallbacks": [
          "24px"
        ]
      },
      "--input-letterspacing": {
        "usecases": [
          "letter-spacing"
        ],
        "fallbacks": [
          "var(--typography-c3-letterspacing, 0.01em)"
        ]
      },
      "--typography-c3-letterspacing": {
        "usecases": [
          "letter-spacing"
        ],
        "fallbacks": [
          "0.01em"
        ]
      },
      "--o-field-background-color-dark": {
        "usecases": [
          "--border",
          "--outline"
        ],
        "fallbacks": [
          "var(--o-color-black, white)",
          "rgb(195, 211, 255)"
        ]
      },
      "--o-field-text-color-dark": {
        "usecases": [
          "--color"
        ],
        "fallbacks": [
          "var(--o-color-black, white)"
        ]
      }
    }
  }
}