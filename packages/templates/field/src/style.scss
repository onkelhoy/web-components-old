$size-map: (
  small: (
    height: var(--field-size-small, 32px),
    blockheight: var(--field-size-small, 32px),
    padding: var(--padding-small, 8px),
  ),
  medium: (
    height: var(--field-size-medium, 40px),
    blockheight: var(--field-size-small, 32px),
    padding: var(--padding-medium, 16px),
  ),
  large: (
    height: var(--field-size-large, 56px),
    blockheight: var(--field-size-small, 32px),
    padding: var(--padding-medium, 16px),
  ),
);

@each $name, $value in $size-map {
    :host([size="#{$name}"]) {
        o-box-template.wrapper {
            height: var(--o-field-height-#{$name}, #{map-get($value, height)});
        }
        footer,
        header {
            height: var(--o-field-block-height-#{$name}, #{map-get($value, blockheight)});
        }
    }
} 

:host {
    --border: var(--o-field-background-color-light, var(--o-color-black, black));
    --outline: var(--o-field-background-color-light, rgb(90, 46, 250));
    --color: var(--o-field-text-color-light, var(--o-color-black, black));

    display: block;
    color: var(--color);

    footer,
    header {
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding-inline: var(--padding-small, 8px);
    }

    footer {
        div {
            display: none;
            align-items: center;
            gap: var(--gap-small, 8px);
        }
    }

    o-box-template.wrapper {
        box-sizing: border-box;
        position: relative;
        display: flex;
        align-items: center;
        padding-inline: var(--padding-medium, 16px);
        border: 1px solid var(--border);

        ::slotted(*:not([slot])),        
        input, select, textarea {
            color: inherit;

            font-family: var(--input-fontfamily, var(--typography-c3-fontfamily, 'Libre Franklin', helvetica, sans-serif));
            font-size: var(--input-fontsize, var(--typography-c3-fontsize, 16px));
            font-weight: var(--input-fontweight, var(--typography-c3-fontweight, 400));
            line-height: var(--input-lineheight, var(--typography-c3-lineheight, 24px));
            letter-spacing: var(--input-letterspacing, var(--typography-c3-letterspacing, 0.01em));
            
            flex-grow: 1;
            display: block;
            border: none;
            background-color: transparent;
            outline: none !important;
        }

        ::slotted(*[slot="prefix"]) {
            margin-right: var(--gap-small, 8px);
        }
        ::slotted(*[slot="suffix"]) {
            margin-left: var(--gap-small, 8px);
        }
    }

    &:focus {
        outline: none;
    }
}
// :host([isSuccess="true"]) {
//     footer {
//         div:not(.error) {
//             display: none;
//         }
//         div.error {
//             display: flex;
//         }
//     }
// }
:host([isWarning="true"]) {
    footer {
        div:not(.warning) {
            display: none;
        }
        div.warning {
            display: flex;
        }
    }
}
:host([isError="true"]) {
    footer {
        div:not(.error) {
            display: none;
        }
        div.error {
            display: flex;
        }
    }
}

:host([hasfocus="true"]),
:host(:focus) {
    outline: none;

    o-box-template.wrapper {
        outline: 1px solid var(--outline);
    }
}

@media (prefers-color-scheme: dark) {
    :host {
        --border: var(--o-field-background-color-dark, var(--o-color-black, white));
        --outline: var(--o-field-background-color-dark, rgb(195, 211, 255));
        --color: var(--o-field-text-color-dark, var(--o-color-black, white));
    }
}