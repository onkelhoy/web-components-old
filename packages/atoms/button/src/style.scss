// value maps
$size-map: (
  small: (
    height: var(--field-size-small),
    font-size: 0.8rem,
    padding: 0.5rem,
    border-width: 1px,
  ),
  medium: (
    font-size: 1rem,
    height: var(--field-size-medium),
    padding: 1rem,
    border-width: 1px,
  ),
  large: (
    font-size: 1.2rem,
    height: var(--field-size-large),
    padding: 1rem,
    border-width: 1px,
  ),
);

:host {
    cursor: var(--button-cursor, pointer);
    align-items: center;
    font-family: var(--button-font-family, var(--font-family, inherit));
    font-weight: var(--o-font-weight-semibold);

    justify-content: space-between;
    gap: 0.5rem;

    box-sizing: border-box;
    position: relative;

    -webkit-user-select: none; /* Safari */
    -ms-user-select: none; /* IE 10 and IE 11 */
    user-select: none; /* Standard syntax */

    background-color: var(--background);
    color: var(--color);
}

:host([mode="hug"]) {
    display: inline-flex;
}
:host([mode="fill"]) {
    display: flex;
}

@each $name, $value in $size-map {
    :host([size="#{$name}"]) {
        font-size: var(--button-font-size-#{$name}, var(--font-size-#{$name}, #{map-get($value, font-size)}));
        height: var(--button-height-#{$name}, var(--height-#{$name}, #{map-get($value, height)}));
        padding: var(--button-padding-#{$name}, var(--padding-#{$name}, #{map-get($value, padding)}));
        border-width: var(--button-border-width-#{$name}, var(--border-width-#{$name}, #{map-get($value, border-width)}));
    }
}

// set the color variables
$colors: (
  primary: (color: white, base: primary),
  danger: (color: white, base: danger),
  success: (color: white, base: success),
  warning: (color: white, base: warning),
  secondary: (color: black, base: neutral),
  brand: (color: black, base: neutral)
);

@each $name, $properties in $colors {
  $base: map-get($properties, 'base');
  $color: map-get($properties, 'color');
  
  :host([color="#{$name}"]) {
    --button-background: var(--o-color-#{$base}-500);
    --button-color: var(--o-color-#{$color});

    --button-background-hover: var(--o-color-#{$base}-700);
    --button-color-hover: var(--o-color-#{$color});

    --button-background-active: var(--o-color-#{$base}-600);
    --button-color-active: var(--o-color-#{$color});

    --button-background-disabled: var(--o-color-neutral-300);
    --button-color-disabled: var(--o-color-neutral-700);
  }
}

:host([color="secondary"]) {
    --button-background: var(--o-color-neutral-100);
    --button-color: var(--o-color-black);

    --button-background-hover: var(--o-color-neutral-300);
    --button-color-hover: var(--o-color-black);

    --button-background-active: var(--o-color-neutral-200);
    --button-color-active: var(--o-color-black);
}

:host([disabled]) {
    cursor: var(--button-cursor-disabled, not-allowed);
}

// filled
:host([variant="filled"]) {
    --background: var(--button-background-color-filled, var(--button-background));
    --color: var(--button-text-color-filled, var(--button-color));
}
:host([variant="filled"]:hover) {
    --background: var(--button-background-color-filled-hover, var(--button-background-hover));
    --color: var(--button-text-color-filled-hover, var(--button-color-hover));
}
:host([variant="filled"]:active) {
    --background: var(--button-background-color-filled-active, var(--button-background-active));
    --color: var(--button-text-color-filled-active, var(--button-color-active));
}
:host([variant="filled"][disabled]) {
    --background: var(--button-background-color-filled-disabled, var(--button-background-disabled));
    --color: var(--button-text-color-filled-disabled, var(--button-color-disabled));
}

// outlined
:host([variant="outlined"]) {
    border-color: var(--button-border-color-outlined, var(--button-background));
    border-style: var(--button-border-style, solid);
    --background: transparent;
}
:host([variant="outlined"]:hover) {
    border-color: var(--button-border-color-outlined-hover, var(--button-background-hover));
    --background: var(--o-button-outlined-hover-background, var(--o-color-hover-200));
}
:host([variant="outlined"]:active) {
    border-color: var(--button-border-color-outlined-active, var(--button-background-active));
    --background: var(--o-button-outlined-active-background, var(--o-color-hover-400));
}
:host([variant="outlined"][disabled]) {
    border-color: var(--button-border-color-outlined-disabled, var(--button-background-disabled));
    --color: var(--o-button-outlined-disabled-text-color, var(--button-color-disabled));
    --background: transparent;
}

:host([variant="clear"]) {
    --background: transparent;
}
:host([variant="clear"]:hover) {
    --background: var(--o-button-clear-hover-background, var(--o-color-hover-200));
}
:host([variant="clear"]:active) {
    --background: var(--o-button-clear-active-background, var(--o-color-hover-400));
}
:host([variant="clear"][disabled]) {
    --color: var(--o-button-clear-disabled-text-color, var(--button-color-disabled));
    --background: transparent;
}

// underlined
:host([variant="underlined"]) {
    --background: transparent;
    text-decoration: underline;
    text-underline-offset: var(--gap-smaller);
    text-decoration-thickness: var(--button-underlined-thickness, 1px);
}
:host([variant="underlined"]:hover) {
    text-decoration-thickness: var(--button-underlined-hover-thickness, 2px);
}
:host([variant="underlined"]:active) {
    text-decoration-thickness: var(--button-underlined-active-thickness, 3px);
}
:host([variant="underlined"][disabled]) {
    text-decoration-thickness: var(--button-underlined-disabled-thickness, 1px);
    --color: var(--o-button-underlined-disabled-text-color, var(--button-color-disabled));
    --background: transparent;
}