@import "style-maps/_mapper.skip";

:host {
  cursor: var(--pap-button-cursor, pointer);

  -webkit-user-select: none;
  /* Safari */
  -ms-user-select: none;
  /* IE 10 and IE 11 */
  user-select: none;
  /* Standard syntax */
  min-height: var(--button-touch-target, 44px);
  display: inline-flex;
  align-items: center;

  border-style: solid;
  border-width: 2px;
  border-color: transparent;

  align-items: center;
  justify-content: center;

  pap-prefix-suffix-template {
    // flex: 1;
    gap: 0;

    &::part(content) {
      display: inline-flex;
      justify-content: center;
      align-items: center;
      padding-inline: var(--padding-small, 8px);
      gap: var(--button-content-gap, var(--gap-small, 8px));
    }
  }

  transition: background-color ease-in 80ms;
}

:host([circle="true"]) {
  pap-prefix-suffix-template {
    &::part(content) {
      padding-inline: 0;
    }
  }
}

:host(.content-flex-start) {
  pap-prefix-suffix-template {
    // flex: 1;

    &::part(content) {
      justify-content: flex-start;
      overflow-x: auto;
    }
  }
}

:host([variant="outlined"]:is(:active)),
:host([variant="outlined"]:is(:hover)) {
  border-color: transparent !important;
}

:host(:not([circle="true"])) {
  padding-inline: var(--padding-small, 8px);
}

:host([mode="hug"]) {
  display: inline-flex;

  display: inline-flex;
}

:host([mode="fill"]) {
  display: flex;

  display: flex;
  width: 100%;
  box-sizing: border-box;
}

:host([text-variant="B1"]),
:host([text-variant="button1"]) {
  font-family: var(--typography-b1-fontfamily, 'Libre Franklin', helvetica, sans-serif);
  font-size: var(--typography-b1-fontsize, 1rem);
  font-weight: var(--typography-b1-fontweight, 600);
  line-height: var(--typography-b1-lineheight, 140%);
  letter-spacing: var(--typography-b1-letterspacing, 0.01rem);
}

:host([color="secondary"][variant="clear"]:not([text-variant="B1"]):not([text-variant="button1"])),
:host([color="inverse"][variant="clear"]:not([text-variant="B1"]):not([text-variant="button1"])),
:host([text-variant="B2"]),
:host([text-variant="button2"]) {
  font-family: var(--typography-b2-fontfamily, 'Libre Franklin', helvetica, sans-serif);
  font-size: var(--typography-b2-fontsize, 1rem);
  font-weight: var(--typography-b2-fontweight, 600);
  line-height: var(--typography-b2-lineheight, 140%);
  letter-spacing: var(--typography-b2-letterspacing, 0.01rem);
  text-decoration: underline;
}

@include set-colors;

:host([disabled="true"]) {
  cursor: var(--pap-button-cursor-disabled, not-allowed);
  color: var(--pap-button-disabled-text, var(--pap-color-text-disabled, #A3A9B7));
}

:host([disabled="true"]) ::slotted(pap-icon) {
  color: var(--pap-button-icon-disabled, var(--pap-color-icon-disabled, #A3A9B7));
}

:host([variant="filled"][disabled="true"]) {
  background-color: var(--pap-button-disabled-filled-background, var(--pap-color-bg-disabled, #DADDE3));
}

:host([variant="outlined"][disabled="true"]) {
  border-color: var(--pap-button-disabled-outlined-border, var(--pap-color-border-disabled, #A3A9B7)) !important;
}

:host(.focus),
:host(:focus-visible) {
  outline-offset: 2px;
  outline: 2px solid var(--pap-color-border-strong, #29292F) !important;
}

:host([disabled="true"]:focus),
:host([disabled="true"].focus),
:host([disabled="true"]:focus-visible),
:host([disabled="true"]:focus-within) {
  outline: none !important;
}

:host([loading="true"]) {
  &::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: var(--field-size-smaller, 24px);
    height: var(--field-size-smaller, 24px);

    border-radius: 50%;
    display: inline-block;
    border-right: 2px solid transparent;
    box-sizing: border-box;

    animation: spin 1s linear infinite;
    /* This line sets up the animation */
  }

  pap-prefix-suffix-template,
  ::slotted(*) {
    display: none !important;
  }
}

:host([loading="true"][mode="hug"]) {
  width: 110px;
}

$radius-map: (
  none: 0px,
  small: var(--radius-small, 4px),
  medium: var(--radius-medium, 8px),
  large: var(--radius-large, 16px),
  circular: var(--radius-max, 1000px),
);

@each $name, $value in $radius-map {
  :host([radius="#{$name}"]) {

    border-radius: var(--button-radius-#{$name}, var(--radius-#{$name}, $value));

  }
}

$size-map: (
  small: (min-width: 4.5rem,
    height: calc(var(--field-size-small, 32px) - 4px), // - border
  ),
  medium: (min-width: 5.625rem,
    height: calc(var(--field-size-medium, 40px) - 4px),
  ),
  large: (min-width: 6.75rem,
    height: calc(var(--unit-size7, 48px) - 4px),
  ),
);

@each $name, $value in $size-map {
  :host([size="#{$name}"]) {
    min-height: var(--pap-button-height-#{$name}, #{map-get($value, height)});
    height: fit-content;
  }

  :host([circle="true"][size="#{$name}"]) {
    pap-prefix-suffix-template {
      justify-content: center;
    }

    width: var(--pap-button-width-#{$name}, #{map-get($value, height)});
  }
}

@keyframes spin {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }

  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}